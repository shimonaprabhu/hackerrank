#include <stdio.h>
#include <stdlib.h>
struct nd
	{
	char SSN[100];
	char phno[100];
	char desig[100];
	char dept[100];
	char name[100];
	char sal[100];
	struct nd *rlink;
	struct nd *llink;
	};
typedef struct nd node;
node *front=NULL;
node *getnode()
	{
	node *p;
	p=(node *)malloc(sizeof(node));
	printf("Enter the name\n");
	scanf("%s",p->name);
	printf("Enter the phone number\n");
	scanf("%s",p->phno);
	printf("Enter the salary\n");
	scanf("%s",p->sal);
	printf("Enter the designation\n");
	scanf("%s",p->desig);
	printf("Enter the department\n");
	scanf("%s",p->dept);
	printf("Enter the SSN\n");
	scanf("%s",p->SSN);
	p->rlink=p->llink=NULL;
	return p;
	}
void insertfront()
	{
	node *p;
	p=getnode();
	if (front==NULL)
		front=p;
	else
		{
		p->rlink=front;
		front->llink=p;
		front=p;
		}
	}
void insertend()
	{
	node *p,*t;
	p=getnode();
	if(front==NULL)
		front=p;
	else
		{
		t=front;
		while(t->rlink!=NULL)
			t=t->rlink;
		t->rlink=p;
		p->llink=t;
		}
	}
void deletefront()
	{
	node *t;
	if(front==NULL)
                printf("Deletion not possible\n");

	else if (front->rlink==NULL)
                {
                free(front);
                front=NULL;
		return;
                }

	else
		{
		t=front;
		front=front->rlink;
		free(t);
		}
	}
void deleteend()
	{
	node *t,*p;
	if(front==NULL)
                printf("Deletion not possible\n");

	else if (front->rlink==NULL)
                {
                free(front);
                front=NULL;
                }
	else
		{
		t=front;
		p=front;
		while(t->rlink!=NULL)
			{
			p=t;
			t=t->rlink;
			}
		p->rlink=NULL;
		t->llink=NULL;
		free(t);
		}
	}
void display()
	{
	node *t;
	int count=0;
	if(front==NULL)
		printf("List is empty\n");
	else
		{
		t=front;
		while(t!=NULL)
		       {
		       printf("SSN:%s\nNAME:%s\nPHONE NUMBER:%s\nSALARY:%s\nDESIGNATION:%s\nDEPARTMENT:%s\n",t->SSN,t->name,t->phno,t->sal,t->desig,t->dept);
		       t=t->rlink;
		       count++;
		       }
		}	
	printf("Number of nodes:%d\n",count);
	}

void queueimp()
{
        int ch,ch2;
        node *front=NULL;
	do
		{
        	printf("1. Output restricted queue\n");
        	printf("2. Input restricted queue\n");
		printf("3. Exit\n");
        	scanf("%d",&ch);
        	do
			{
			switch(ch)
        			{
                		case 1:printf("1. Input from front\n");
		       		       printf("2. Input from end\n");
		       		       printf("3. Delete\n");
		       		       printf("4. Display\n");
				       printf("5. Exit\n");
		       		       scanf("%d",&ch2);
		                       if(ch2==1)
		       				insertfront();
				       else if(ch2==2)
						insertend();
				       else if(ch2==3)
						deletefront();
				       else if(ch2==4)
						display();
				       else
						break;
                        	       break;
                case 2:printf("1. Delete from front\n");
                       printf("2. Delete from end\n");
                       printf("3. Input\n");
                       printf("4. Display\n");
		       printf("5. Exit\n");
                       scanf("%d",&ch2);
                       if(ch2==1)
                                deletefront();
                        else if(ch2==2)
                                deleteend();
                        else if(ch2==3)
                                insertend();
                        else if(ch2==4)
                                display();
			else
				break;
                        break;
        }
	}
	while(ch2!=5);
}while(ch!=3);
}

void nnode()
	{
	int N;
	int i;
	printf("Enter the number of nodes\n");
	scanf("%d",&N);
	for(i=0;i<N;i++)
	insertend();
	display();
	}

void main()
        {
	int choice;
        do
                {
                printf("This is a menu driven program\n"); 
                printf("1. Insert an element in the front\n");
                printf("2. Insert an element at the end\n");
                printf("3. Delete an element in the front\n");
                printf("4. Delete an element from the end\n");
                printf("5. Display the list\n");
		printf("6. Implement queue\n");
		printf("7. Creation of a N node DLL\n");
		printf("8. Exit\n");
                printf("Enter your choice\n");
                scanf("%d",&choice);
                switch(choice)
                {
                        case 1:insertfront();
                        break;
                        case 2:insertend();
                        break;
                        case 3:deletefront();
                        break;
                        case 4:deleteend();
                        break;
			case 5:display();
			break;
			case 6:queueimp();
			break;
			case 7:nnode();
			break;
		}
		}
                while(choice!=8);
	}

